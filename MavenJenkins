sudo apt install maven
mvn --version

mvn archetype:generate -DgroupId=com.example -DartifactId=MavenJenkins -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false

cd MavenJenkins

gedit pom.xml
//code inside pom.xml
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.example</groupId>
  <artifactId>MavenJenkins</artifactId>
  <packaging>jar</packaging>
  <version>1.0-SNAPSHOT</version>  
  <name>MavenJenkins</name>
  <url>http://maven.apache.org</url>  
  <!-- Properties: Customize Java version or plugin versions -->
<properties>
<maven.compiler.source>11</maven.compiler.source>
<maven.compiler.target>11</maven.compiler.target>
</properties>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
    <!-- Build: Configuring plugins and build settings -->
<build>
<plugins>
<!-- Example: Maven Compiler Plugin to compile Java code -->
<plugin>
<groupId>org.apache.maven.plugins</groupId>
<artifactId>maven-compiler-plugin</artifactId>
<version>3.8.1</version>
<configuration>
<source>1.8</source>
<target>1.8</target>
</configuration>
</plugin>
<!-- Example: Maven Surefire Plugin to run tests -->
<plugin>
<groupId>org.apache.maven.plugins</groupId>
<artifactId>maven-surefire-plugin</artifactId>
<version>2.22.2</version>
</plugin>
<plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <version>3.1.0</version>
            <configuration>
                <archive>
                    <manifestEntries>
                        <Main-Class>com.example.App</Main-Class>
                    </manifestEntries>
                </archive>
            </configuration>
        </plugin>  
</plugins>
</build>
</project>


mvn clean install

Create a github repository named "MavenJenkins"

gedit Jenkinsfile
//code inside Jenkinsfile
pipeline {
    agent any  // Use any available agent
    tools {
        maven 'Maven'  // Ensure this matches the name configured in Jenkins
    }
    stages {
        stage('Checkout') {
            steps {
                git branch: 'master', url: 'https://github.com/yenrimedia/MavenJenkins.git'
            }
        }
        stage('Build') {
            steps {
                sh 'mvn clean package'  // Run Maven build
            }
        }
        stage('Test') {
            steps {
                sh 'mvn test'  // Run unit tests
            }
        }       
        stage('Run Application') {
            steps {
                // Start the JAR application
                sh 'java -jar target/MavenJenkins-1.0-SNAPSHOT.jar'
            }
        }        
    }
    post {
        success {
            echo 'Build and deployment successful!'
        }
        failure {
            echo 'Build failed!'
        }
    }
}


git init
git add .
git commit -m "Initial commit"
git remote add origin https://github.com/yenrimedia/MavenJenkins.git
git remote set-url origin https://"your-token"@github.com/yenrimedia/MavenJenkins.git
git push -u origin master

Create a jenkins pipeline named MavenJenkinsPipeline and Build it
